<snippet>
	<content><![CDATA[
import {Component} from 'angular2/core';

@Component({
	selector: "${1:stf-selector}",
	inputs: [],
	outputs: [],
	template: `
		${3:<h1>STF Component</h1>}
	` 	
})
export class ${2:ComponentClass} {
	constructor() {
		
	}
	
	// ### LIVE CYCLE HOOKS
	// Initialize the directive/component after Angular initializes the data-bound input properties.
	// ngOnInit() {}
	
	// Respond after Angular sets a data-bound input property.
	// The method receives a changes object of current and previous values.
	// ngOnChanges() {}
	
	// Detect and act upon changes that Angular can or won't detect on its own. 
	// Called every change detection run.	
	// ngDoCheck() {}	
	
	// Cleanup just before Angular destroys the directive/component. 
	// Unsubscribe observables and detach event handlers to avoid memory leaks.
	// ngOnDestroy() {}	
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>ng2_comp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.ts</scope>
</snippet>
